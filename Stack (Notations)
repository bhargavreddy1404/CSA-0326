#include <stdio.h>
#include <ctype.h>
#define SIZE 100

char stack[SIZE];
int top = -1;

// PUSH function
void push(char ch) {
    if (top == SIZE - 1)
        printf("Stack Overflow\n");
    else
        stack[++top] = ch;
}

// POP function
char pop() {
    if (top == -1)
        return -1;
    else
        return stack[top--];
}

// Function to return precedence of operators
int precedence(char ch) {
    if (ch == '(')
        return 0;
    if (ch == '+' || ch == '-')
        return 1;
    if (ch == '*' || ch == '/')
        return 2;
    return -1;
}

int main() {
    char exp[SIZE], *e, x;
    printf("Enter infix expression: ");
    scanf("%s", exp);

    e = exp;

    printf("Postfix expression: ");
    while (*e != '\0') {
        if (isalnum(*e))
            printf("%c", *e);
        else if (*e == '(')
            push(*e);
        else if (*e == ')') {
            while ((x = pop()) != '(')
                printf("%c", x);
        } else {
            while (precedence(stack[top]) >= precedence(*e))
                printf("%c", pop());
            push(*e);
        }
        e++;
    }

    while (top != -1) {
        printf("%c", pop());
    }

    printf("\n");
    return 0;
}
